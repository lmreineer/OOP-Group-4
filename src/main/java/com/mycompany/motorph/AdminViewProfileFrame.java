/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.motorph;

import com.mycompany.motorph.employee.EmployeeInformation;
import com.opencsv.exceptions.CsvValidationException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 * A class that displays the specific employee's pay information based on the
 * selected month, and his/her full information and allows updating of them.
 *
 * @author Lance
 */
class AdminViewProfileFrame extends javax.swing.JFrame implements EmployeeInformationManager {

    // Constants for button coloring changes
    private static final java.awt.Color LIGHT_BLUE = new java.awt.Color(203, 203, 239);
    private static final java.awt.Color WHITE = new java.awt.Color(255, 255, 255);
    private static final java.awt.Color RED = new java.awt.Color(191, 47, 47);
    private static final java.awt.Color GRAY = new java.awt.Color(242, 242, 242);

    private boolean deleteButtonClicked = false;
    private final EmployeeSearchPage employeeSearchPage;

    /**
     * Constructs the AdminViewProfileFrame and initializes the employee
     * profile.
     *
     * @param employeeInformation List containing the employee's details.
     * @param searchPage Reference to the EmployeeSearchPage for navigation.
     */
    public AdminViewProfileFrame(List<String> employeeInformation, EmployeeSearchPage searchPage) {
        initComponents();
        this.employeeSearchPage = searchPage;
        setupFrame(employeeInformation);
    }

    /**
     * Configures the frame layout and displays the employee information.
     *
     * @param employeeDetails List containing employee details to be displayed.
     */
    private void setupFrame(List<String> employeeDetails) {
        setLayout(new BorderLayout());
        showInformation(employeeDetails);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * Displays the employee's information within the UI components.
     *
     * @param employeeDetails List of strings containing the employee's details.
     */
    private void showInformation(List<String> employeeDetails) {
        populateEmployeeInformation(employeeDetails.get(0));

        // Configure scroll panel to fit content
        scrollPaneMain.setPreferredSize(new Dimension(603, 627));
        scrollPaneMain.setVisible(true);
        add(scrollPaneMain, BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneMain = new javax.swing.JScrollPane();
        pnlMain = new javax.swing.JPanel();
        lblMotorPhHeader = new javax.swing.JLabel();
        lblEmployeeInformationHeader = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        lblBirthdate = new javax.swing.JLabel();
        txtBirthdate = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtSssNumber = new javax.swing.JTextField();
        lblSssNumber = new javax.swing.JLabel();
        txtPhilHealthNumber = new javax.swing.JTextField();
        lblPhilHealthNumber = new javax.swing.JLabel();
        txtTinNumber = new javax.swing.JTextField();
        lblTinNumber = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        txtPagIbigNumber = new javax.swing.JTextField();
        lblPagIbigNumber = new javax.swing.JLabel();
        txtPosition = new javax.swing.JTextField();
        lblPosition = new javax.swing.JLabel();
        txtBasicSalary = new javax.swing.JTextField();
        lblBasicSalary = new javax.swing.JLabel();
        txtPhoneAllowance = new javax.swing.JTextField();
        lblPhoneAllowance = new javax.swing.JLabel();
        txtGrossSemimonthlyRate = new javax.swing.JTextField();
        lblGrossSemimonthlyRate = new javax.swing.JLabel();
        txtImmediateSupervisor = new javax.swing.JTextField();
        lblImmediateSupervisor = new javax.swing.JLabel();
        txtRiceSubsidy = new javax.swing.JTextField();
        lblRiceSubsidy = new javax.swing.JLabel();
        txtClothingAllowance = new javax.swing.JTextField();
        lblClothingAllowance = new javax.swing.JLabel();
        txtHourlyRate = new javax.swing.JTextField();
        lblHourlyRate = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblBottomSeparator = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDeleteInfo = new javax.swing.JButton();
        btnUpdateInfo = new javax.swing.JButton();
        lblEmployeeNumber = new javax.swing.JLabel();
        txtEmployeeNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Employee and Wage Information");
        setResizable(false);

        scrollPaneMain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));

        lblMotorPhHeader.setBackground(new java.awt.Color(255, 255, 255));
        lblMotorPhHeader.setFont(new java.awt.Font("Leelawadee", 1, 18)); // NOI18N
        lblMotorPhHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMotorPhHeader.setText("MotorPH Payroll System");
        lblMotorPhHeader.setOpaque(true);

        lblEmployeeInformationHeader.setBackground(new java.awt.Color(223, 54, 54));
        lblEmployeeInformationHeader.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        lblEmployeeInformationHeader.setForeground(new java.awt.Color(255, 255, 255));
        lblEmployeeInformationHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmployeeInformationHeader.setText("Employee Information");
        lblEmployeeInformationHeader.setOpaque(true);

        txtLastName.setEditable(false);
        txtLastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLastName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtLastName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtLastName.setFocusable(false);

        lblLastName.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblLastName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLastName.setText("Last Name:");
        lblLastName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblLastName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLastName.setMaximumSize(new java.awt.Dimension(93, 25));
        lblLastName.setMinimumSize(new java.awt.Dimension(93, 25));
        lblLastName.setOpaque(true);

        lblBirthdate.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblBirthdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBirthdate.setText("Birthdate:");
        lblBirthdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblBirthdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblBirthdate.setMaximumSize(new java.awt.Dimension(93, 25));
        lblBirthdate.setMinimumSize(new java.awt.Dimension(93, 25));
        lblBirthdate.setOpaque(true);

        txtBirthdate.setEditable(false);
        txtBirthdate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBirthdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtBirthdate.setFocusable(false);

        txtPhoneNumber.setEditable(false);
        txtPhoneNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPhoneNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtPhoneNumber.setFocusable(false);

        lblPhoneNumber.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhoneNumber.setText("Phone #:");
        lblPhoneNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblPhoneNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPhoneNumber.setMaximumSize(new java.awt.Dimension(93, 25));
        lblPhoneNumber.setMinimumSize(new java.awt.Dimension(93, 25));
        lblPhoneNumber.setOpaque(true);

        txtAddress.setEditable(false);
        txtAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAddress.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtAddress.setFocusable(false);

        lblAddress.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddress.setText("Address:");
        lblAddress.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblAddress.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAddress.setMaximumSize(new java.awt.Dimension(93, 25));
        lblAddress.setMinimumSize(new java.awt.Dimension(93, 25));
        lblAddress.setOpaque(true);

        txtSssNumber.setEditable(false);
        txtSssNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSssNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtSssNumber.setFocusable(false);

        lblSssNumber.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblSssNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSssNumber.setText("SSS #:");
        lblSssNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblSssNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblSssNumber.setMaximumSize(new java.awt.Dimension(93, 25));
        lblSssNumber.setMinimumSize(new java.awt.Dimension(93, 25));
        lblSssNumber.setOpaque(true);

        txtPhilHealthNumber.setEditable(false);
        txtPhilHealthNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPhilHealthNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtPhilHealthNumber.setFocusable(false);

        lblPhilHealthNumber.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblPhilHealthNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhilHealthNumber.setText("PhilHealth #:");
        lblPhilHealthNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblPhilHealthNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPhilHealthNumber.setMaximumSize(new java.awt.Dimension(93, 25));
        lblPhilHealthNumber.setMinimumSize(new java.awt.Dimension(93, 25));
        lblPhilHealthNumber.setOpaque(true);

        txtTinNumber.setEditable(false);
        txtTinNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTinNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtTinNumber.setFocusable(false);

        lblTinNumber.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblTinNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTinNumber.setText("TIN:");
        lblTinNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblTinNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblTinNumber.setMaximumSize(new java.awt.Dimension(93, 25));
        lblTinNumber.setMinimumSize(new java.awt.Dimension(93, 25));
        lblTinNumber.setOpaque(true);

        txtStatus.setEditable(false);
        txtStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStatus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtStatus.setFocusable(false);

        lblStatus.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("Status:");
        lblStatus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblStatus.setMaximumSize(new java.awt.Dimension(93, 25));
        lblStatus.setMinimumSize(new java.awt.Dimension(93, 25));
        lblStatus.setOpaque(true);

        txtPagIbigNumber.setEditable(false);
        txtPagIbigNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPagIbigNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtPagIbigNumber.setFocusable(false);

        lblPagIbigNumber.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblPagIbigNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPagIbigNumber.setText("Pag-IBIG #:");
        lblPagIbigNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblPagIbigNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPagIbigNumber.setMaximumSize(new java.awt.Dimension(93, 25));
        lblPagIbigNumber.setMinimumSize(new java.awt.Dimension(93, 25));
        lblPagIbigNumber.setOpaque(true);

        txtPosition.setEditable(false);
        txtPosition.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPosition.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtPosition.setFocusable(false);

        lblPosition.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblPosition.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPosition.setText("Position:");
        lblPosition.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblPosition.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPosition.setMaximumSize(new java.awt.Dimension(93, 25));
        lblPosition.setMinimumSize(new java.awt.Dimension(93, 25));
        lblPosition.setOpaque(true);

        txtBasicSalary.setEditable(false);
        txtBasicSalary.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBasicSalary.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtBasicSalary.setFocusable(false);

        lblBasicSalary.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblBasicSalary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBasicSalary.setText("Basic Salary:");
        lblBasicSalary.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblBasicSalary.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblBasicSalary.setMaximumSize(new java.awt.Dimension(93, 25));
        lblBasicSalary.setMinimumSize(new java.awt.Dimension(93, 25));
        lblBasicSalary.setOpaque(true);

        txtPhoneAllowance.setEditable(false);
        txtPhoneAllowance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPhoneAllowance.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtPhoneAllowance.setFocusable(false);

        lblPhoneAllowance.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblPhoneAllowance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhoneAllowance.setText("Phone Allowance:");
        lblPhoneAllowance.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblPhoneAllowance.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPhoneAllowance.setMaximumSize(new java.awt.Dimension(93, 25));
        lblPhoneAllowance.setMinimumSize(new java.awt.Dimension(93, 25));
        lblPhoneAllowance.setOpaque(true);

        txtGrossSemimonthlyRate.setEditable(false);
        txtGrossSemimonthlyRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGrossSemimonthlyRate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtGrossSemimonthlyRate.setFocusable(false);

        lblGrossSemimonthlyRate.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblGrossSemimonthlyRate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGrossSemimonthlyRate.setText("Gross Semi-monthly Rate:");
        lblGrossSemimonthlyRate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblGrossSemimonthlyRate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblGrossSemimonthlyRate.setMaximumSize(new java.awt.Dimension(93, 25));
        lblGrossSemimonthlyRate.setMinimumSize(new java.awt.Dimension(93, 25));
        lblGrossSemimonthlyRate.setOpaque(true);

        txtImmediateSupervisor.setEditable(false);
        txtImmediateSupervisor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtImmediateSupervisor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtImmediateSupervisor.setFocusable(false);

        lblImmediateSupervisor.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblImmediateSupervisor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImmediateSupervisor.setText("Immediate Supervisor:");
        lblImmediateSupervisor.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblImmediateSupervisor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImmediateSupervisor.setMaximumSize(new java.awt.Dimension(93, 25));
        lblImmediateSupervisor.setMinimumSize(new java.awt.Dimension(93, 25));
        lblImmediateSupervisor.setOpaque(true);

        txtRiceSubsidy.setEditable(false);
        txtRiceSubsidy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRiceSubsidy.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtRiceSubsidy.setFocusable(false);

        lblRiceSubsidy.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblRiceSubsidy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRiceSubsidy.setText("Rice Subsidy:");
        lblRiceSubsidy.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblRiceSubsidy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblRiceSubsidy.setMaximumSize(new java.awt.Dimension(93, 25));
        lblRiceSubsidy.setMinimumSize(new java.awt.Dimension(93, 25));
        lblRiceSubsidy.setOpaque(true);

        txtClothingAllowance.setEditable(false);
        txtClothingAllowance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtClothingAllowance.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtClothingAllowance.setFocusable(false);

        lblClothingAllowance.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblClothingAllowance.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClothingAllowance.setText("Clothing Allowance:");
        lblClothingAllowance.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblClothingAllowance.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblClothingAllowance.setMaximumSize(new java.awt.Dimension(93, 25));
        lblClothingAllowance.setMinimumSize(new java.awt.Dimension(93, 25));
        lblClothingAllowance.setOpaque(true);

        txtHourlyRate.setEditable(false);
        txtHourlyRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtHourlyRate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtHourlyRate.setFocusable(false);

        lblHourlyRate.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblHourlyRate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHourlyRate.setText("Hourly Rate:");
        lblHourlyRate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblHourlyRate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHourlyRate.setMaximumSize(new java.awt.Dimension(93, 25));
        lblHourlyRate.setMinimumSize(new java.awt.Dimension(93, 25));
        lblHourlyRate.setOpaque(true);

        lblFirstName.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblFirstName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFirstName.setText("First Name:");
        lblFirstName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblFirstName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFirstName.setMaximumSize(new java.awt.Dimension(93, 25));
        lblFirstName.setMinimumSize(new java.awt.Dimension(93, 25));
        lblFirstName.setOpaque(true);

        txtFirstName.setEditable(false);
        txtFirstName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFirstName.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtFirstName.setFocusable(false);

        lblBottomSeparator.setBackground(new java.awt.Color(51, 51, 51));
        lblBottomSeparator.setFont(new java.awt.Font("Leelawadee", 1, 16)); // NOI18N
        lblBottomSeparator.setForeground(new java.awt.Color(255, 255, 255));
        lblBottomSeparator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBottomSeparator.setOpaque(true);

        btnExit.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExit.setFocusable(false);
        btnExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnExitMouseExited(evt);
            }
        });
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusable(false);
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeleteInfo.setBackground(new java.awt.Color(199, 73, 73));
        btnDeleteInfo.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        btnDeleteInfo.setText("Delete Information");
        btnDeleteInfo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnDeleteInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteInfo.setEnabled(false);
        btnDeleteInfo.setFocusable(false);
        btnDeleteInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteInfoActionPerformed(evt);
            }
        });

        btnUpdateInfo.setBackground(new java.awt.Color(73, 199, 73));
        btnUpdateInfo.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        btnUpdateInfo.setText("Update Information");
        btnUpdateInfo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnUpdateInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateInfo.setEnabled(false);
        btnUpdateInfo.setFocusable(false);
        btnUpdateInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateInfoActionPerformed(evt);
            }
        });

        lblEmployeeNumber.setFont(new java.awt.Font("Leelawadee UI", 1, 12)); // NOI18N
        lblEmployeeNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmployeeNumber.setText("Employee #");
        lblEmployeeNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        lblEmployeeNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblEmployeeNumber.setMaximumSize(new java.awt.Dimension(93, 25));
        lblEmployeeNumber.setMinimumSize(new java.awt.Dimension(93, 25));
        lblEmployeeNumber.setOpaque(true);

        txtEmployeeNumber.setEditable(false);
        txtEmployeeNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEmployeeNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        txtEmployeeNumber.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtEmployeeNumber.setFocusable(false);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBottomSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblEmployeeInformationHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblMotorPhHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMainLayout.createSequentialGroup()
                        .addComponent(lblEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmployeeNumber))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLastName))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFirstName))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBirthdate))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAddress))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhoneNumber))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblSssNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSssNumber))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblPhilHealthNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhilHealthNumber))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblTinNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTinNumber))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblPagIbigNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPagIbigNumber))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPosition))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblImmediateSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtImmediateSupervisor))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBasicSalary))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblRiceSubsidy, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRiceSubsidy))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblPhoneAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhoneAllowance))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblClothingAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtClothingAllowance))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMainLayout.createSequentialGroup()
                        .addComponent(lblGrossSemimonthlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrossSemimonthlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMainLayout.createSequentialGroup()
                        .addComponent(lblHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(btnDeleteInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnUpdateInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)))
                .addGap(6, 6, 6))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblMotorPhHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(lblEmployeeInformationHeader)
                .addGap(15, 15, 15)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSssNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSssNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhilHealthNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhilHealthNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTinNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTinNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPagIbigNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPagIbigNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImmediateSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtImmediateSupervisor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRiceSubsidy, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRiceSubsidy, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClothingAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClothingAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGrossSemimonthlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGrossSemimonthlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHourlyRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(lblBottomSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        scrollPaneMain.setViewportView(pnlMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1140, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the action event of the back button to close the current page.
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // Close the current page
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * Handles mouse exit event on the back button by resetting its background
     * color.
     */
    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        btnBack.setBackground(WHITE);
    }//GEN-LAST:event_btnBackMouseExited

    /**
     * Handles mouse hover event on the back button by changing its background
     * color.
     */
    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        btnBack.setBackground(LIGHT_BLUE);
    }//GEN-LAST:event_btnBackMouseEntered

    /**
     * Handles the action event of the exit button to exit the application.
     */
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // Exit the application
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * Handles mouse exit event on the exit button by resetting its background
     * color.
     */
    private void btnExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseExited
        btnExit.setBackground(WHITE);
    }//GEN-LAST:event_btnExitMouseExited

    /**
     * Handles mouse hover event on the exit button by changing its background
     * color.
     */
    private void btnExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExitMouseEntered
        btnExit.setBackground(RED);
    }//GEN-LAST:event_btnExitMouseEntered

    /**
     * Sets the fields editable for updating employee information.
     */
    private void btnUpdateInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateInfoActionPerformed
        deleteButtonClicked = false;

        // Change button text to "Save", set background color to white
        btnUpdateInfo.setText("Save");
        btnUpdateInfo.setBackground(Color.WHITE);

        // Remove previous action listeners and add save functionality
        btnUpdateInfo.removeActionListener(btnUpdateInfo.getActionListeners()[0]);
        btnUpdateInfo.addActionListener(e -> updateEmployeeInformation());

        // Set fields editable for updating
        setFieldsEditable(true);
    }//GEN-LAST:event_btnUpdateInfoActionPerformed

    /**
     * Handles employee record deletion, with a confirmation dialog.
     */
    private void btnDeleteInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteInfoActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete this employee's record?", "Confirm Deletion",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (confirmation == JOptionPane.YES_OPTION) {
            try {
                int employeeNumber = Integer.parseInt(txtEmployeeNumber.getText());
                deleteEmployeeRecord(employeeNumber);
                JOptionPane.showMessageDialog(this, "Employee record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Refresh employee list after deletion
                if (employeeSearchPage != null) {
                    employeeSearchPage.refreshEmployeeTable();
                }

                dispose(); // Close the frame after deletion
            } catch (IOException | NumberFormatException e) {
                showErrorDialog("Error deleting employee record: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnDeleteInfoActionPerformed

    /**
     * Displays an error dialog with the provided error message.
     *
     * @param errorMessage The error message to display in the dialog.
     */
    @Override
    public void showErrorDialog(String errorMessage) {
        // Show a dialog with the error message
        JOptionPane.showMessageDialog(pnlMain, "Error updating employee information: " + errorMessage, "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * Updates the employee information text fields for the chosen employee.
     *
     * @param employeeInfo The information of the employee
     */
    private void updateEmployeeInformationFields(List<String> employeeInfo) {
        JTextField[] textFields = {txtEmployeeNumber, txtLastName, txtFirstName, txtBirthdate, txtAddress, txtPhoneNumber,
            txtSssNumber, txtPhilHealthNumber, txtTinNumber, txtPagIbigNumber, txtStatus, txtPosition,
            txtImmediateSupervisor, txtBasicSalary, txtRiceSubsidy, txtPhoneAllowance, txtClothingAllowance,
            txtGrossSemimonthlyRate, txtHourlyRate};

        // Set the text of each field with the employee information
        for (int i = 0; i < textFields.length; i++) {
            textFields[i].setText(employeeInfo.get(i));
        }
    }

    /**
     * Populates employee information fields based on the provided employee
     * number.
     *
     * @param employeeNumberString The employee number as a string.
     */
    private void populateEmployeeInformation(String employeeNumberString) {
        try {
            // Parse the employee number from the text field
            int employeeNumber = Integer.parseInt(employeeNumberString);

            // Get employee information
            List<String> employeeInfo = new EmployeeInformation().showEmployeeInformation(employeeNumber);

            // Populate text fields with employee information
            updateEmployeeInformationFields(employeeInfo);

            // Enable the delete and update buttons
            btnDeleteInfo.setEnabled(true);
            btnUpdateInfo.setEnabled(true);
        } catch (IOException | ParseException | CsvValidationException | IllegalArgumentException e) {
            // Show error dialog with the exception message
            showErrorDialog(e.getMessage());
        }
    }

    /**
     * Sets the text fields editable or non-editable.
     *
     * @param allowed If true, fields become editable; otherwise, they are
     * disabled.
     */
    private void setFieldsEditable(boolean allowed) {
        // Define an array of text fields
        JTextField[] textFields = {
            txtLastName, txtFirstName, txtBirthdate, txtAddress, txtPhoneNumber,
            txtSssNumber, txtPhilHealthNumber, txtTinNumber, txtPagIbigNumber,
            txtStatus, txtPosition, txtImmediateSupervisor, txtBasicSalary,
            txtRiceSubsidy, txtPhoneAllowance, txtClothingAllowance,
            txtGrossSemimonthlyRate, txtHourlyRate
        };

        // Loop through each text field
        for (JTextField field : textFields) {
            // Change text fields' background color
            field.setBackground(allowed ? WHITE : GRAY);

            if (deleteButtonClicked) {
                field.setCursor(new Cursor(Cursor.HAND_CURSOR));
                // Set text fields to non-editable
                field.setEditable(false);
                field.setFocusable(false);
            } else {
                deleteButtonClicked = false;
                field.setCursor(new Cursor(Cursor.TEXT_CURSOR));
                // Set text fields to editable
                field.setEditable(allowed);
                field.setFocusable(allowed);
            }
        }
    }

    /**
     * Gathers updated employee information from UI fields.
     *
     * @return A list of strings representing the employee's updated details.
     */
    private List<String> gatherEmployeeInformationFromFields() {
        List<String> employeeInfo = new ArrayList<>();

        // Add the text of each field to the list
        employeeInfo.add(txtLastName.getText());
        employeeInfo.add(txtFirstName.getText());
        employeeInfo.add(txtBirthdate.getText());
        employeeInfo.add(txtAddress.getText());
        employeeInfo.add(txtPhoneNumber.getText());
        employeeInfo.add(txtSssNumber.getText());
        employeeInfo.add(txtPhilHealthNumber.getText());
        employeeInfo.add(txtTinNumber.getText());
        employeeInfo.add(txtPagIbigNumber.getText());
        employeeInfo.add(txtStatus.getText());
        employeeInfo.add(txtPosition.getText());
        employeeInfo.add(txtImmediateSupervisor.getText());
        employeeInfo.add(txtBasicSalary.getText());
        employeeInfo.add(txtRiceSubsidy.getText());
        employeeInfo.add(txtPhoneAllowance.getText());
        employeeInfo.add(txtClothingAllowance.getText());
        employeeInfo.add(txtGrossSemimonthlyRate.getText());
        employeeInfo.add(txtHourlyRate.getText());

        return employeeInfo;
    }

    /**
     * Updates the employee information based on input from fields. Gets data
     * and updates CSV files.
     */
    private void updateEmployeeInformation() {
        try {
            // Parse the employee number from the text field
            int employeeNumber = Integer.parseInt(txtEmployeeNumber.getText());

            // Gather the updated employee information from the fields
            List<String> updatedEmployeeInfo = gatherEmployeeInformationFromFields();

            // Update the employee information in the CSV file
            new EmployeeInformation().updateEmployeeInformationInCsv(employeeNumber, updatedEmployeeInfo);

            // Set fields non-editable after saving
            setFieldsEditable(false);

            // Change button text back to "Update Info" and restore green shade color
            btnUpdateInfo.setText("Update Info");
            btnUpdateInfo.setBackground(new Color(34, 177, 76)); // Green shade

            // Restore original action listener
            btnUpdateInfo.removeActionListener(btnUpdateInfo.getActionListeners()[0]);
            btnUpdateInfo.addActionListener(this::btnUpdateInfoActionPerformed);

            // Refresh the employee list after updating
            if (employeeSearchPage != null) {
                employeeSearchPage.refreshEmployeeTable();
            }

            deleteButtonClicked = false;
        } catch (IOException | IllegalArgumentException | ParseException | CsvValidationException e) {
            // Show error dialog with the exception message
            showErrorDialog(e.getMessage());
        }
    }

    private void deleteEmployeeRecord(int employeeNumber) throws IOException {
        // Create deleted_employee.csv if it doesn't exist
        File deletedEmployeesFile = new File("src/main/resources/data/deleted_employee.csv");
        if (!deletedEmployeesFile.exists()) {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(deletedEmployeesFile))) {
                // Write header in first row
                writer.write("\"Employee #\",\"Last Name\",\"First Name\",\"Birthday\",\"Address\",\"Phone Number\",\"SSS #\",\"Philhealth #\",\"TIN #\",\"Pag-ibig #\",\"Status\",\"Position\",\"Immediate Supervisor\",\"Basic Salary\",\"Rice Subsidy\",\"Phone Allowance\",\"Clothing Allowance\",\"Gross Semi-monthly Rate\",\"Hourly Rate\",Username,Password,Division");
                writer.newLine(); // Add a single newline to move to next row
            }
        }

        // Read and store the employee info and login credentials before deletion
        File inputFile = new File("src/main/resources/data/employee_information.csv");
        File loginFile = new File("src/main/resources/data/login_credentials.csv");
        File tempFile = new File("src/main/resources/data/temp_employee_information.csv");
        String deletedEmployeeInfo = null;
        String username = "";
        String password = "";
        String division = "";

        // First, get the login credentials and create temp login file
        File tempLoginFile = new File("src/main/resources/data/temp_login_credentials.csv");
        
        try (BufferedReader loginReader = new BufferedReader(new FileReader(loginFile));
             BufferedWriter loginWriter = new BufferedWriter(new FileWriter(tempLoginFile))) {
            
            // Write header to temp login file
            String loginHeader = loginReader.readLine();
            loginWriter.write(loginHeader + "\n");
            
            String loginLine;
            while ((loginLine = loginReader.readLine()) != null) {
                String[] loginData = loginLine.split(",");
                // Remove any quotes from the username
                String loginUsername = loginData[0].replaceAll("\"", "").trim(); // U001, U002, etc.
                
                // Convert employee number to login credential format (1 -> U001)
                String expectedUsername = String.format("U%03d", employeeNumber);
                
                if (loginUsername.equals(expectedUsername)) {
                    username = loginUsername;
                    // Remove quotes from password and division
                    password = loginData[1].replaceAll("\"", "").trim();
                    division = loginData[2].replaceAll("\"", "").trim();
                    // Don't write this line to temp file (effectively deleting it)
                    System.out.println("Found and removing credentials for: " + loginUsername); // Debug line
                } else {
                    // Write all other lines to temp file as they are
                    loginWriter.write(loginLine + "\n");
                }
            }
        }

        // Now handle the employee information
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))) {

            String header = reader.readLine();
            writer.write(header + "\n");

            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)"); // Split by comma but not within quotes
                String empNum = data[0].replaceAll("\"", "").trim();

                if (empNum.equals(String.valueOf(employeeNumber))) {
                    // Build the deleted employee record with proper formatting
                    StringBuilder record = new StringBuilder();
                    for (int i = 0; i < data.length; i++) {
                        String field = data[i].replaceAll("^\"|\"$", "").trim(); // Remove surrounding quotes
                        record.append("\"").append(field).append("\"");
                        if (i < data.length - 1) {
                            record.append(",");
                        }
                    }
                    // Add login credentials without quotes
                    record.append(",").append(username);
                    record.append(",").append(password);
                    record.append(",").append(division);
                    
                    deletedEmployeeInfo = record.toString();
                } else {
                    writer.write(line + "\n");
                }
            }
        }

        // Save to deleted_employee.csv
        if (deletedEmployeeInfo != null) {
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(deletedEmployeesFile, true))) {
                writer.write(deletedEmployeeInfo);
                writer.newLine(); // Add newline for next record
            }
        }

        // Replace original files with temp files
        if (!inputFile.delete()) {
            throw new IOException("Could not delete the original employee file.");
        }
        if (!tempFile.renameTo(inputFile)) {
            throw new IOException("Could not rename the temporary employee file.");
        }

        if (!loginFile.delete()) {
            throw new IOException("Could not delete the original login credentials file.");
        }
        if (!tempLoginFile.renameTo(loginFile)) {
            throw new IOException("Could not rename the temporary login credentials file.");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteInfo;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnUpdateInfo;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBasicSalary;
    private javax.swing.JLabel lblBirthdate;
    private javax.swing.JLabel lblBottomSeparator;
    private javax.swing.JLabel lblClothingAllowance;
    private javax.swing.JLabel lblEmployeeInformationHeader;
    private javax.swing.JLabel lblEmployeeNumber;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGrossSemimonthlyRate;
    private javax.swing.JLabel lblHourlyRate;
    private javax.swing.JLabel lblImmediateSupervisor;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMotorPhHeader;
    private javax.swing.JLabel lblPagIbigNumber;
    private javax.swing.JLabel lblPhilHealthNumber;
    private javax.swing.JLabel lblPhoneAllowance;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblRiceSubsidy;
    private javax.swing.JLabel lblSssNumber;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTinNumber;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JScrollPane scrollPaneMain;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtBasicSalary;
    private javax.swing.JTextField txtBirthdate;
    private javax.swing.JTextField txtClothingAllowance;
    private javax.swing.JTextField txtEmployeeNumber;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtGrossSemimonthlyRate;
    private javax.swing.JTextField txtHourlyRate;
    private javax.swing.JTextField txtImmediateSupervisor;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPagIbigNumber;
    private javax.swing.JTextField txtPhilHealthNumber;
    private javax.swing.JTextField txtPhoneAllowance;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtRiceSubsidy;
    private javax.swing.JTextField txtSssNumber;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTinNumber;
    // End of variables declaration//GEN-END:variables
}
